--!!--
-- Auto-generated by DocLang Generator
-- REMOVE THIS COMMENT IF YOU MODIFY THIS FILE
-- in order to protect it from being overwritten!
--!!--

local class = require "com.class"

---@class ConfigConfig
---@overload fun(data, path):ConfigConfig
local ConfigConfig = class:derive("ConfigConfig")



---Constructs an instance of ConfigConfig.
---@param data table Raw data from a file.
---@param path string Path to the file. The file is not loaded here, and it is not used in error messages, but some classes use it for saving data. TODO: Find an alternative.
function ConfigConfig:new(data, path)
    local u = _ConfigUtils
    self._path = path

    self.name = u.parseStringOpt(data.name, path, "name")
    self.windowTitle = u.parseStringOpt(data.windowTitle, path, "windowTitle")
    self.engineVersion = u.parseString(data.engineVersion, path, "engineVersion")
    self.nativeResolution = u.parseVec2(data.nativeResolution, path, "nativeResolution")
    self.tickRate = u.parseInteger(data.tickRate, path, "tickRate")
    self.renderOnCanvas = u.parseBooleanOpt(data.renderOnCanvas, path, "renderOnCanvas")
    self.canvasRenderingMode = u.parseStringOpt(data.canvasRenderingMode, path, "canvasRenderingMode")

    self.richPresence = {}
    self.richPresence.enabled = u.parseBoolean(data.richPresence.enabled, path, "richPresence.enabled")
    self.richPresence.applicationID = u.parseStringOpt(data.richPresence.applicationID, path, "richPresence.applicationID")
    self.useUI2 = u.parseBooleanOpt(data.useUI2, path, "useUI2")
end



return ConfigConfig
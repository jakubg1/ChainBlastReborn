--!!--
-- Auto-generated by DocLang Generator
-- REMOVE THIS COMMENT IF YOU MODIFY THIS FILE
-- in order to protect it from being overwritten!
--!!--

local class = require "com.class"

---@class LevelConfig
---@overload fun(data, path):LevelConfig
local LevelConfig = class:derive("LevelConfig")



---Constructs an instance of LevelConfig.
---@param data table Raw data from a file.
---@param path string Path to the file. The file is not loaded here, and it is not used in error messages, but some classes use it for saving data. TODO: Find an alternative.
function LevelConfig:new(data, path)
    local u = _ConfigUtils
    self._path = path

    self.name = u.parseString(data.name, path, "name")

    self.key = {}
    for n, _ in pairs(data.key) do
        self.key[tonumber(n)] = {}

        if data.tile then
            self.key[tonumber(n)].tile = {}
            self.key[tonumber(n)].tile.type = u.parseString(data.key[n].tile.type, path, "key." .. tostring(n) .. ".tile.type")
        end
    end
    self.key = {}

    if data.tile then
        self.key.tile = {}
        self.key.tile.type = u.parseString(data.key.tile.type, path, "key.tile.type")
    end
    self.layout = {}
    for i = 1, #data.layout do
        self.layout[i] = u.parseString(data.layout[i], path, "layout[" .. tostring(i) .. "]")
    end
end



return LevelConfig
--!!--
-- Auto-generated by DocLang Generator
-- REMOVE THIS COMMENT IF YOU MODIFY THIS FILE
-- in order to protect it from being overwritten!
--!!--

local class = require "com.class"

---@class UI2AnimationConfig
---@overload fun(data, path):UI2AnimationConfig
local UI2AnimationConfig = class:derive("UI2AnimationConfig")



---Constructs an instance of UI2AnimationConfig.
---@param data table Raw data from a file.
---@param path string Path to the file. The file is not loaded here, and it is not used in error messages, but some classes use it for saving data. TODO: Find an alternative.
function UI2AnimationConfig:new(data, path)
    local u = _ConfigUtils
    self._path = path

    self.property = u.parseString(data.property, path, "property")
    if self.property == "alpha" then
        self.from = u.parseNumberOpt(data.from, path, "from")
        self.to = u.parseNumber(data.to, path, "to")
        self.duration = u.parseNumber(data.duration, path, "duration")
    elseif self.property == "pos" then
        self.from = u.parseVec2Opt(data.from, path, "from")
        self.to = u.parseVec2(data.to, path, "to")
        self.duration = u.parseNumber(data.duration, path, "duration")
    elseif self.property == "posX" then
        self.from = u.parseNumberOpt(data.from, path, "from")
        self.to = u.parseNumber(data.to, path, "to")
        self.duration = u.parseNumber(data.duration, path, "duration")
    elseif self.property == "posY" then
        self.from = u.parseNumberOpt(data.from, path, "from")
        self.to = u.parseNumber(data.to, path, "to")
        self.duration = u.parseNumber(data.duration, path, "duration")
    elseif self.property == "scale" then
        self.from = u.parseVec2Opt(data.from, path, "from")
        self.to = u.parseVec2(data.to, path, "to")
        self.duration = u.parseNumber(data.duration, path, "duration")
    elseif self.property == "scaleX" then
        self.from = u.parseNumberOpt(data.from, path, "from")
        self.to = u.parseNumber(data.to, path, "to")
        self.duration = u.parseNumber(data.duration, path, "duration")
    elseif self.property == "scaleY" then
        self.from = u.parseNumberOpt(data.from, path, "from")
        self.to = u.parseNumber(data.to, path, "to")
        self.duration = u.parseNumber(data.duration, path, "duration")
    else
        error(string.format("Unknown UI2AnimationConfig type: %s (expected \"alpha\", \"pos\", \"posX\", \"posY\", \"scale\", \"scaleX\" or \"scaleY\")", self.property))
    end
end



return UI2AnimationConfig
--!!--
-- Auto-generated by DocLang Generator
-- REMOVE THIS COMMENT IF YOU MODIFY THIS FILE
-- in order to protect it from being overwritten!
--!!--

local class = require "com.class"

---@class SphereHitBehaviorConfig
---@overload fun(data, path):SphereHitBehaviorConfig
local SphereHitBehaviorConfig = class:derive("SphereHitBehaviorConfig")



---Constructs an instance of SphereHitBehaviorConfig.
---@param data table Raw data from a file.
---@param path string Path to the file. The file is not loaded here, and it is not used in error messages, but some classes use it for saving data. TODO: Find an alternative.
function SphereHitBehaviorConfig:new(data, path)
    local u = _ConfigUtils
    self._path = path

    self.type = u.parseString(data.type, path, "type")
    if self.type == "normal" then
        -- No fields
    elseif self.type == "destroySpheres" then
        self.selector = u.parseSphereSelectorConfig(data.selector, path, "selector")
        self.scoreEvent = u.parseScoreEventConfigOpt(data.scoreEvent, path, "scoreEvent")
        self.scoreEventPerSphere = u.parseScoreEventConfigOpt(data.scoreEventPerSphere, path, "scoreEventPerSphere")
    elseif self.type == "recolorSpheres" then
        self.selector = u.parseSphereSelectorConfig(data.selector, path, "selector")
        self.color = u.parseInteger(data.color, path, "color")
        self.particle = u.parseParticleOpt(data.particle, path, "particle")
    else
        error(string.format("Unknown SphereHitBehaviorConfig type: %s (expected \"normal\", \"destroySpheres\" or \"recolorSpheres\")", self.type))
    end
end



return SphereHitBehaviorConfig
--!!--
-- Auto-generated by DocLang Generator
-- REMOVE THIS COMMENT IF YOU MODIFY THIS FILE
-- in order to protect it from being overwritten!
--!!--

local class = require "com.class"

---@class SoundEventConfig
---@overload fun(data, path):SoundEventConfig
local SoundEventConfig = class:derive("SoundEventConfig")



---Constructs an instance of SoundEventConfig.
---@param data table Raw data from a file.
---@param path string Path to the file. The file is not loaded here, and it is not used in error messages, but some classes use it for saving data. TODO: Find an alternative.
function SoundEventConfig:new(data, path)
    local u = _ConfigUtils
    self._path = path

    self.sound = u.parseSoundOpt(data.sound, path, "sound")
    self.loop = u.parseBooleanOpt(data.loop, path, "loop")
    self.flat = u.parseBooleanOpt(data.flat, path, "flat")
    self.volume = u.parseExprNumberOpt(data.volume, path, "volume")
    self.pitch = u.parseExprNumberOpt(data.pitch, path, "pitch")
    self.instances = u.parseIntegerOpt(data.instances, path, "instances")
    self.sounds = {}
    if data.sounds then
        for i = 1, #data.sounds do
            self.sounds[i] = {}
            self.sounds[i].sound = u.parseSound(data.sounds[i].sound, path, "sounds[" .. tostring(i) .. "].sound")
            self.sounds[i].loop = u.parseBooleanOpt(data.sounds[i].loop, path, "sounds[" .. tostring(i) .. "].loop")
            self.sounds[i].flat = u.parseBooleanOpt(data.sounds[i].flat, path, "sounds[" .. tostring(i) .. "].flat")
            self.sounds[i].volume = u.parseExprNumberOpt(data.sounds[i].volume, path, "sounds[" .. tostring(i) .. "].volume")
            self.sounds[i].pitch = u.parseExprNumberOpt(data.sounds[i].pitch, path, "sounds[" .. tostring(i) .. "].pitch")
            self.sounds[i].instances = u.parseIntegerOpt(data.sounds[i].instances, path, "sounds[" .. tostring(i) .. "].instances")
            self.sounds[i].conditions = {}
            if data.sounds[i].conditions then
                for j = 1, #data.sounds[i].conditions do
                    self.sounds[i].conditions[j] = u.parseExprBoolean(data.sounds[i].conditions[j], path, "sounds[" .. tostring(i) .. "].conditions[" .. tostring(j) .. "]")
                end
            end
        end
    end
end



return SoundEventConfig